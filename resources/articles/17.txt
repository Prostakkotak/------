

Обновление языка программирования JavaScript (es5) - ECMAScript 2015 (ES6)

Каждый программист знаком с языком программирования JavaScript. В настоящее
время он используется во всех браузерах и активно поддерживается и развивается. В 2015
СОВРЕМЕННЫЕ ИННОВАЦИИ № 12(14) 2016 █ 46 █
году был утвержден новый стандарт языка ES6, который стал огромным шагом вперед.
Спецификация ES6 состоит порядка из 600 страниц когда, как предыдущая часть состоит
из 245 страниц [1]. Несмотря на то, что это очень крупный проект, ES6 обладает полной
обратной совместимостью, то есть разработчикам доступен старый функционал языка. В
обновлении добавили многие необходимые JavaScript - разработчикам элементы, которые
мы сейчас рассмотрим.
let и scope - переменные с блочной областью видимости
В старой версии ES5 все переменные были доступны из любой точки кода, например:
For (var i=0; i<10; i++){ } console.log(i);
В большинстве языков этот код выведет ошибку, что i неизвестен, но в ES5 в консоль
выведется число «10». Причина в том, что в ES5 используется hoisting — то есть декларации
всех используемых переменных переносятся в начало функции, что дает некоторые проблемы с
названиями переменных. В новой спецификации присутствуют переменные let и scope,
которые доступны только внутри блока.
Функции
Если в старой версии функции описывались так:
function (some, variable) { };
то в версии ES6 функции описываются так:
(some, variable) => {};
Такой подход позволяет писать не такие громоздкие коды как в старой версии и улучшает
читабельность написанной программы.
Классы
В ES5 отсутствуют классы, но их можно было сымитировать:
function Vehicle(topSpeed){
this.topSpeed = topSpeed;
this.printTopSpeed = function(){
console. Log ('Top speed:'+this.topSpeed+' km/h'); }}
В новой спецификации появились настоящие классы. В классах возможно дефинировать
статические методы. Стоит отметить, что тело класса всегда интерпретируется в strict mode.
class Vehicle {
constructor(topSpeed) { this.topSpeed = topSpeed; }
printTopSpeed(){ console.log('Top speed:'+this.topSpeed+' km/h') }}
Присвоение значений
Появилась возможность обменивать значения без временной переменной, что сокращает код.
function getNumbers(){ return [2,3,5]; }
var [firstPrime, secondPrime, thirdPrime] = getFirstPrimeNumbers();
На данный момент только начинается внедрение ES6 в браузеры. Но многие программисты
уже разрабатывают серьезные проекты на нем. Были созданы разные библиотеки, которые
компилируют ES6 на ES5, такие, как Babel или WebPack.
Развитие языка JavaScript было медленным. Но в последнее время наблюдается резкий рост
интереса к языку и его развитие как серьезный язык программирования.
