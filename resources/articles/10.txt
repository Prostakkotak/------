
О ПОДХОДЕ ИСПОЛЬЗОВАНИЯ HEADLESS CMS ПРИ РАЗРАБОТКЕ КОРПОРАТИВНЫХ ИНТЕРНЕТ-САЙТОВ

В современном мире многие компании и организации создают свои корпоративные сайты в
интернете. На таких сайтах обычно рассказывается о том, чем занимается компания, об услугах и
товарах, контакты, а также адрес расположения. Корпоративный сайт – необходимый атрибут
бизнеса компании. При просмотре различных корпоративных сайтов можно сделать вывод о том,
что они похожи друг на друга по своей структуре. Находясь в постоянном развитии, технологии
устаревают, а следовательно, устаревают системы и приложения, которые были созданы при помощи этих технологий.
На сегодняшний день большая часть корпоративных сайтов разработаны с помощью CMS [1].
CMS, или Content Management System – информационная система или компьютерная программа,
используемая для обеспечения и организации совместного процесса создания, редактирования и
управления содержимым сайта. В целом CMS можно разделить на два вида: традиционные и
headless. Headless CMS как правило не предоставляет возможность управления дизайном сайта, а
позволяет только редактировать контент, который отображается на сайте [2]. Для управления
структурой страниц сайта можно использовать классическую CMS, но такой подход не всегда
удобен ввиду того, что такие системы зачастую оказываются довольно сложными для простого
пользователя и могут включать множество ненужных модулей. Для решения данной проблемы
Коваль М.Е., Шинкарев А.А., О подходе использования headless CMS
Логиновская В.О. при разработке корпоративных интернет-сайтов
Вестник ЮУрГУ. Серия «Компьютерные технологии, управление, радиоэлектроника».
2022. Т. 22, № 1. С. 147–153
149
далее рассмотрим компонентный подход, который объединяет преимущества классических и
headless CMS в одной системе и позволяет добавлять новые компоненты на страницы сайта без
участия разработчиков [3].
1. Отличия headless от традиционных CMS
Главное преимущество headless CMS заключается в том, что они обеспечивают большую гибкость в дизайне веб-сайта. Фронтенд-разработчики могут извлекать данные из CMS и представлять их любым способом, который они хотят, что открывает гораздо больше возможностей [4].
Вместо того чтобы придерживаться ограниченных функций и стандартных шаблонов традиционной CMS, компании с выделенной командой фронтенд-разработчиков могут использовать headless CMS для разработки крупномасштабных и уникальных веб-сайтов, которые могут выделиться среди конкурентов.
Разделение контента и пользовательского интерфейса также обеспечивает большую гибкость
во время разработки. Традиционные инструменты CMS обычно требуют использования определенных фреймворков и языков, тогда как headless CMS позволяют разработчикам использовать
все, что угодно. Они также позволяют создателям контента и разработчикам работать параллельно, что может повысить общую продуктивность. Разделение также упрощает изменение конструкции в будущем. В традиционных CMS контент глубоко привязан к макету, что затрудняет изменение аспектов дизайна; для серьезных изменений может даже потребоваться совершенно новая CMS [5].
Контент, управляемый headless CMS, может легко отображаться на нескольких платформах.
С другой стороны, контент и макет переплетаются в традиционной CMS, поэтому она не может
поддерживать платформы, для которых они не были изначально разработаны. Headless CMS является гибкой и ориентированной на будущее, что позволяет ей использовать другие платформы,
даже если они не входят в ваш текущий план развития продукта [6].
Традиционные системы управления контентом также имеют свои преимущества, самым
большим из которых является то, что традиционное программное обеспечение CMS намного
проще в установке и использовании. Все, от управления контентом до дизайна и пользовательского интерфейса, собрано в одном месте, что упрощает быструю разработку и публикацию
контента.
Традиционная CMS может быть лучшим вариантом для небольших организаций, не имеющих необходимых ресурсов для эффективного использования автономной CMS. Это также лучший вариант для простых веб-сайтов, у которых нет функций, которые может не иметь стандартный шаблон CMS. Но если вы не хотите использовать шаблон для своего веб-сайта или хотите
добавить функциональность, которую традиционные инструменты CMS не могут предоставить,
в таком случае стоит рассмотреть использование headless CMS [7].
2. Выбор headless CMS
Одним из главных требований к CMS была возможность редактирования макета сайта, возможность конструирования страниц из набора готовых компонентов. Это было нужно для того,
чтобы в дальнейшем пользователи данной CMS могли самостоятельно добавлять новые страницы на свой сайт без привлечения сторонних разработчиков. Планировалось, что система будет
поддерживать server-side rendering для обеспечения возможности построения дерева компонентов
на основе информации, полученной от CMS, чтобы отобразить их на странице сайта. Также требовалось, чтобы CMS поддерживала возможность веб-хуки (webhooks) для вызова функции перезагрузки сайта и его обновления.
Были рассмотрены такие headless CMS, как Strapi, Orchard. Данные CMS очень просты для
понимания и использования. Однако они предоставляют возможность только плоских моделей и
не обеспечивают возможность создания вложенных моделей. Такой подход подходит для создания простых сайтов, в которых не требуется сложных программных и дизайнерских решений.
Также был проведен анализ Directus CMS. Данная система предоставляет функционал редактирования контента посредством таблицы. Данный функционал показался не очень удобным ввиду
не очень понятного отображения данных [8–10].
Краткие сообщения
Brief Reports
150 Bulletin of the South Ural State University. Ser.
Из всех рассмотренных CMS
Эта система реализует компонентный подход к управлению контентом. Поддерживает функци
нал для предпросмотра вносимых на сайт изменений.
контент для различных языков, что позволяет сделать сайт мультиязычным. Имеет встроенный
механизм для пагинации данных в таблицах. Все эти функции позволяют сократить время на их
реализацию с нуля, а следовательно, экономят средства заказчика и обеспечивают еще больше
простоты для дальнейшей работы. Но самое главное то, что данная
ность формирования деревьев компонентов, которое отображается на сайте, а значит, удовле
ряет главному требованию, которое описано выше. Единственный минус, который стоит отм
тить, – данная CMS предоставляется как сервис, поэтому развернуть ее на собственных серверах
не получится. Однако существующие тарифы на покупку данной системы довольн
а также имеется бесплатный тариф с ограниченным функционалом [11].
3. Пример использования компонентного подхода
В данной главе будет представлен пример, который демонстрирует возможности компонен
ного подхода и динамическое встраивание
зовании Storyblok. Для того чтобы использовать данный подход, требуется базовое понимание
работы ReactJS и Next.js. Также предполагается, что
ходимые библиотеки. Инструкции по установке и подключению можно изучить в документ
к Storyblok. Далее будет описан предлагаемый подход [12].
При открытии главной страницы
пе можно добавить нужные страницы.
После добавления необходимых страниц следует перейти к редактированию компонентов,
которые можно применять для создания структуры страниц сайта.
лагает компонент Grid. Наш подход заключается в том, что нужно изменить данный компонент и
создать несколько своих, это позволит строить страницы из нескольких колонок и добавлять л
бое содержимое в эти колонки независимо друг от друга. Для этого нужно выбрать вкладку
ponents в меню Storyblok. Сначала требуется создать компонент
его структура.
После этого переходим в компонент
держать в себе компонент column
Данная структура компонентов позволяет в поле
другой компонент, дерево которых затем будет отображаться на странице сайта. Далее можно
использовать созданные компоненты и добавлять их на нужные страницы [13
пользования изображен на рис. 4.
Bulletin of the South Ural State University. Ser. Computer Technologies, Automatic Control, Radio Electronics
2022.
CMS особое внимание обратили на систему с названием
Эта система реализует компонентный подход к управлению контентом. Поддерживает функци
вносимых на сайт изменений. Storyblok дает возможность настраивать
контент для различных языков, что позволяет сделать сайт мультиязычным. Имеет встроенный
механизм для пагинации данных в таблицах. Все эти функции позволяют сократить время на их
ю с нуля, а следовательно, экономят средства заказчика и обеспечивают еще больше
простоты для дальнейшей работы. Но самое главное то, что данная CMS поддерживает возмо
ность формирования деревьев компонентов, которое отображается на сайте, а значит, удовле
ряет главному требованию, которое описано выше. Единственный минус, который стоит отм
предоставляется как сервис, поэтому развернуть ее на собственных серверах
не получится. Однако существующие тарифы на покупку данной системы довольн
а также имеется бесплатный тариф с ограниченным функционалом [11].
Пример использования компонентного подхода
В данной главе будет представлен пример, который демонстрирует возможности компонен
ного подхода и динамическое встраивание компонентов в разметку страницы сайта при испол
. Для того чтобы использовать данный подход, требуется базовое понимание
. Также предполагается, что уже имеется проект и подключены все н
трукции по установке и подключению можно изучить в документ
. Далее будет описан предлагаемый подход [12].
При открытии главной страницы CMS выводится список страниц сайта (рис. 1). На этом эт
пе можно добавить нужные страницы.
Рис. 1. Главная страница Storyblok
Fig. 1. Main page of Storyblok
После добавления необходимых страниц следует перейти к редактированию компонентов,
которые можно применять для создания структуры страниц сайта. Storyblok
ш подход заключается в том, что нужно изменить данный компонент и
создать несколько своих, это позволит строить страницы из нескольких колонок и добавлять л
бое содержимое в эти колонки независимо друг от друга. Для этого нужно выбрать вкладку
. Сначала требуется создать компонент Column. На рис. 2 изображена
После этого переходим в компонент Grid и изменяем его таким образом, чтобы он мог с
column (рис. 3).
Данная структура компонентов позволяет в поле body компонента Column
другой компонент, дерево которых затем будет отображаться на странице сайта. Далее можно
использовать созданные компоненты и добавлять их на нужные страницы [13
пользования изображен на рис. 4.
Computer Technologies, Automatic Control, Radio Electronics.
2. Vol. 22, no. 1. P. 147–153
особое внимание обратили на систему с названием Storyblok.
Эта система реализует компонентный подход к управлению контентом. Поддерживает функциодает возможность настраивать
контент для различных языков, что позволяет сделать сайт мультиязычным. Имеет встроенный
механизм для пагинации данных в таблицах. Все эти функции позволяют сократить время на их
ю с нуля, а следовательно, экономят средства заказчика и обеспечивают еще больше
поддерживает возможность формирования деревьев компонентов, которое отображается на сайте, а значит, удовлетворяет главному требованию, которое описано выше. Единственный минус, который стоит отмепредоставляется как сервис, поэтому развернуть ее на собственных серверах
не получится. Однако существующие тарифы на покупку данной системы довольно невысоки,
В данной главе будет представлен пример, который демонстрирует возможности компоненткомпонентов в разметку страницы сайта при исполь-
. Для того чтобы использовать данный подход, требуется базовое понимание
проект и подключены все необтрукции по установке и подключению можно изучить в документации
выводится список страниц сайта (рис. 1). На этом этаПосле добавления необходимых страниц следует перейти к редактированию компонентов,
Storyblok по умолчанию предш подход заключается в том, что нужно изменить данный компонент и
создать несколько своих, это позволит строить страницы из нескольких колонок и добавлять любое содержимое в эти колонки независимо друг от друга. Для этого нужно выбрать вкладку Com-
. На рис. 2 изображена
и изменяем его таким образом, чтобы он мог соColumn вставлять любой
другой компонент, дерево которых затем будет отображаться на странице сайта. Далее можно
использовать созданные компоненты и добавлять их на нужные страницы [13–15]. Пример ис-
Коваль М.Е., Шинкарев А.А.,
Логиновская В.О.
Вестник ЮУрГУ. Серия «Компьютерные технологии, управление, радиоэлектроника».
2022. Т. 22, № 1. С. 147–153
Рис. 2. Структура компонента Column
Fig. 2. Structure of Column component
Рис. 4. Пример использования компонентов
Заключение
В свете изложенного в статье можно увидеть, что традиционные и
достоинства и недостатки. Достоинства традиционных
ко и быстро могут быть развернуты на серверах, одна
чие множества зачастую ненужных модулей и сложности при редактировании страниц. Можно
сказать, что если корпоративный сайт компании разработан с помощью традиционной
для его поддержки может понадобиться помо
Однако существует такое решение, как
предложенного компонентного подхода, можно достичь того, что страницы сайта сможет реда
тировать пользователь, который далек от информационных технологий. Следовательно, подход
позволяет избежать привлечения сторонних разработчиков для поддержки и обновления сайта,
их участие требуется только при создании каркаса сайта и подключении
редь позволяет сократить затраты компании на поддержку корпоративного сайта.
О подходе использования
 при разработке корпоративных интернет
Вестник ЮУрГУ. Серия «Компьютерные технологии, управление, радиоэлектроника».
В свете изложенного в статье можно увидеть, что традиционные и headless
достоинства и недостатки. Достоинства традиционных CMS состоят в том, что они довольно ле
ко и быстро могут быть развернуты на серверах, однако они имеют и недостатки, такие как нал
чие множества зачастую ненужных модулей и сложности при редактировании страниц. Можно
сказать, что если корпоративный сайт компании разработан с помощью традиционной
для его поддержки может понадобиться помощь сторонних разработчиков.
Однако существует такое решение, как headless CMS. Разрабатывая сайт с применением
предложенного компонентного подхода, можно достичь того, что страницы сайта сможет реда
тировать пользователь, который далек от информационных технологий. Следовательно, подход
позволяет избежать привлечения сторонних разработчиков для поддержки и обновления сайта,
их участие требуется только при создании каркаса сайта и подключении CMS
редь позволяет сократить затраты компании на поддержку корпоративного сайта.
